{"version":3,"file":"component---src-templates-article-js-76fe748582114dbf8aa8.js","mappings":"8MA+CA,EArCY,SAAC,GAAe,IAAdA,EAAa,EAAbA,QACNC,GAAOC,EAAAA,EAAAA,gBAAe,aAa5B,OACE,2BACKF,EAAQG,OAELH,EAAQI,KAAI,SAAAC,GAAM,OAClB,qBAAGC,UAAU,cAAcC,IAAKF,EAAOG,MACrC,qBAAGC,KAAMJ,EAAOK,KAAMJ,UAAU,iCAAiCD,EAAOG,MAD1E,IACqFH,EAAOM,YAH9FV,EAAKW,KAAKC,aAAaC,c,oBCkDjC,EAnEyB,SAAC,GAAwB,IAAD,EAArBb,EAAqB,EAArBA,KAAMc,EAAe,EAAfA,SAC1BC,EAAOf,EAAKgB,eACZC,GAAY,UAAAjB,EAAKW,KAAKC,oBAAV,eAAwBM,QAAxB,QACVC,EAAmBnB,EAAnBmB,SAAUC,EAASpB,EAAToB,KAEZC,GAAQC,EAAAA,EAAAA,GAASP,EAAKQ,YAAYC,OAGxC,OACE,gBAAC,IAAD,CAAQV,SAAUA,EAAUI,MAAOD,GACjC,gBAAC,IAAD,CACEC,MAAOH,EAAKQ,YAAYL,MACxBL,YAAaE,EAAKQ,YAAYV,aAAeE,EAAKU,UAGpD,2BACEpB,UAAU,2DACVqB,WAAS,EACTC,SAAS,6BAGT,uBAAKtB,UAAU,uCACb,gBAAC,EAAAuB,KAAD,CAAMC,GAAG,QAAQxB,UAAU,yBAA3B,eAKF,0BAAQA,UAAU,QAChB,sBAAIyB,SAAS,WAAWzB,UAAU,YAAYU,EAAKQ,YAAYL,OAC/D,yBAAIH,EAAKQ,YAAYQ,MACrB,gBAAC,EAAAC,EAAD,CAAaX,MAAOA,EAAOY,IAAKlB,EAAKQ,YAAYL,MAAOb,UAAU,8BAA8B6B,UAAU,UAAUJ,SAAS,UAC7H,gBAAC,EAAD,CAAK/B,QAASgB,EAAKQ,YAAYxB,WAGjC,2BACEoC,wBAAyB,CAAEC,OAAQrB,EAAKsB,MACxCP,SAAS,cACTzB,UAAU,kBAEZ,4BAMF,uBAAKA,UAAU,wCACb,sBAAIA,UAAU,gDACZ,0BACGc,GACC,gBAAC,EAAAS,KAAD,CAAMC,GAAIV,EAASmB,OAAOC,KAAMC,IAAI,OAAOnC,UAAU,mBAArD,KACKc,EAASI,YAAYL,QAI9B,0BACGE,GACC,gBAAC,EAAAQ,KAAD,CAAMC,GAAIT,EAAKkB,OAAOC,KAAMC,IAAI,OAAOnC,UAAU,mBAC9Ce,EAAKG,YAAYL,MADpB","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/templates/article.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst Bio = ({authors}) => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          description\n          social {\n            twitter\n          }\n        }\n      }\n    }\n    `)\n\n  return (\n    <div>\n      { !authors.length ?\n          data.site.siteMetadata.description\n          : authors.map(author => (\n            <p className='mb-4 italic' key={author.name}>\n              <a href={author.link} className=\"font-semibold hover:underline\">{author.name}</a> {author.summary}\n            </p>\n          ))}\n    </div>\n        //<StaticImage\n          //className=\"bio-avatar\"\n          //layout=\"fixed\"\n          //formats={[\"auto\", \"webp\", \"avif\"]}\n          //src=\"../images/profile-pic.png\"\n          //width={50}\n          //height={50}\n          //quality={95}\n          //alt=\"Profile picture\"\n        ///>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nimport '../markdown.css'\n\nconst BlogPostTemplate = ({ data, location }) => {\n  const post = data.markdownRemark\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const { previous, next } = data\n\n  const image = getImage(post.frontmatter.cover)\n\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n\n      <article\n        className=\"container max-w-4xl mx-auto my-8 mt-4 blog-post sm_mt-16\"\n        itemScope\n        itemType=\"http://schema.org/Article\"\n      >\n\n        <div className='flex flex-wrap justify-between my-4'>\n          <Link to='/news' className='block hover_underline'>\n            ← Show all\n          </Link>\n        </div>\n\n        <header className=\"my-8\">\n          <h1 itemProp=\"headline\" className=\"text-4xl\">{post.frontmatter.title}</h1>\n          <p>{post.frontmatter.date}</p>\n          <GatsbyImage image={image} alt={post.frontmatter.title} className=\"w-full h-full my-4 max-h-80\" objectFit=\"contain\" itemProp=\"image\" />\n          <Bio authors={post.frontmatter.authors} />\n        </header>\n\n        <section\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n          className=\"my-4 markdown\"\n        />\n        <hr />\n        {/*<footer>\n          <Bio />\n        </footer>*/}\n      </article>\n\n      <nav className=\"container mx-auto my-8 blog-post-nav\">\n        <ul className=\"flex flex-wrap justify-between p-0 list-none\">\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\" className=\"hover:underline\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\" className=\"hover:underline\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        cover {\n          childImageSharp {\n            gatsbyImageData(\n              width: 1024\n              placeholder: BLURRED\n              formats: [AUTO, WEBP, AVIF]\n            )\n          }\n        }\n        authors {\n          name\n          summary\n          link\n        }\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`\n"],"names":["authors","data","useStaticQuery","length","map","author","className","key","name","href","link","summary","site","siteMetadata","description","location","post","markdownRemark","siteTitle","title","previous","next","image","getImage","frontmatter","cover","excerpt","itemScope","itemType","Link","to","itemProp","date","G","alt","objectFit","dangerouslySetInnerHTML","__html","html","fields","slug","rel"],"sourceRoot":""}