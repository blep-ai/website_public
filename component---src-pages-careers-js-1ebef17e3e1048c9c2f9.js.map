{"version":3,"sources":["webpack:///./src/pages/careers.js","webpack:///./src/components/Tag/index.js"],"names":["AnimFeTurbulence","animated","AnimFeDisplacementMap","PostLink","post","className","to","frontmatter","slug","title","location","commitment","tags","length","map","tag","key","kebabCase","edges","data","allMarkdownRemark","Posts","edge","node","id","console","log","useSpring","from","scale","opacity","transform","freq","config","duration","includePreFooter","svg","height","type","baseFrequency","numOctaves","result","seed","xChannelSelector","yChannelSelector","in","in2","p","style","filter","pageQuery","Tag"],"mappings":"8FAAA,sIAQMA,EAAmBC,mBAAS,gBAC5BC,EAAwBD,mBAAS,qBAEjCE,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OAChB,yBAAKC,UAAU,6BACd,kBAAC,OAAD,CAAMC,GAAIF,EAAKG,YAAYC,MAC1B,wBAAIH,UAAU,yBAAyBD,EAAKG,YAAYE,OACvDL,EAAKG,YAAYG,SAFnB,MAEgCN,EAAKG,YAAYI,YAIjD,6BACC,wBAAIN,UAAU,WACXD,EAAKG,YAAYK,MAAQR,EAAKG,YAAYK,KAAKC,OAC9CT,EAAKG,YAAYK,KAAKE,KAAI,SAAAC,GAAG,OAC9B,wBAAIC,IAAKD,EAAG,MAAUV,UAAU,UAC/B,kBAAC,OAAD,CAAMC,GAAE,SAAWW,oBAAUF,GAArB,KACP,kBAAC,IAAD,CAAKC,IAAKD,EAAKA,IAAKA,SAIrB,SAMQ,sBAIR,IAFgBG,EAEjB,EAHLC,KACCC,kBAAqBF,MAGhBG,EAAQH,EAEZJ,KAAI,SAAAQ,GAAI,OAAI,kBAACnB,EAAD,CAAUa,IAAKM,EAAKC,KAAKC,GAAIpB,KAAMkB,EAAKC,UAEtDE,QAAQC,IAAIR,GALP,MAOuCS,oBAAU,CACrDC,KAAM,CAAEC,MAAO,GAAIC,QAAS,GAAKC,UAAW,aAAcC,KAAM,eAChE1B,GAAI,CAAEuB,MAAO,GAAIC,QAAS,EAAGC,UAAW,WAAYC,KAAM,YAC1DC,OAAQ,CAAEC,SAAU,OAHbF,EAPH,EAOGA,KAAMH,EAPT,EAOSA,MAAOE,EAPhB,EAOgBA,UAAWD,EAP3B,EAO2BA,QAMhC,OACC,kBAAC,IAAD,CAAQK,kBAAgB,GACvB,yBAAK9B,UAAU,uHACd,kBAAC,WAAS+B,IAAV,CAAcC,OAAQ,GACrB,8BACC,4BAAQb,GAAG,SACV,kBAACxB,EAAD,CAAkBsC,KAAK,eAAeC,cAAeP,EAAMQ,WAAW,MAAMC,OAAO,OAAOC,KAAK,MAC/F,kBAACxC,EAAD,CAAuByC,iBAAiB,IAAIC,iBAAiB,IAAIC,GAAG,gBAAgBC,IAAI,OAAOL,OAAO,OAAOZ,MAAOA,OAIvH,kBAAC,WAASkB,EAAV,CAAYC,MAAO,CAAEC,OAAQ,cAAelB,UAAWA,EAAWD,QAASA,IAA3E,mBAID,yBAAKzB,UAAU,oCACd,yBAAKA,UAAU,QACbgB,MAOC,IAAM6B,EAAS,a,kCC5EtB,2DAEe,SAASC,EAAT,GAAwB,IAARpC,EAAO,EAAPA,IAC9B,OACC,0BAAMV,UAAU,sGAAhB,IAAuHU","file":"component---src-pages-careers-js-1ebef17e3e1048c9c2f9.js","sourcesContent":["import React from 'react'\nimport { graphql, Link } from 'gatsby'\nimport { kebabCase } from 'lodash'\nimport Layout from '../components/Layout'\nimport Tag from '../components/Tag'\n\nimport { useSpring, animated } from 'react-spring'\n\nconst AnimFeTurbulence = animated('feTurbulence')\nconst AnimFeDisplacementMap = animated('feDisplacementMap')\n\nconst PostLink = ({ post }) => (\n\t<div className='flex justify-between my-8'>\n\t\t<Link to={post.frontmatter.slug}>\n\t\t\t<h2 className='text-lg font-semibold'>{post.frontmatter.title}</h2>\n\t\t\t{post.frontmatter.location} â€“ {post.frontmatter.commitment}\n\t\t</Link>\n\n\t\t{/* tags */}\n\t\t<div>\n\t\t\t<ul className='taglist'>\n\t\t\t\t{(post.frontmatter.tags && post.frontmatter.tags.length)\n\t\t\t\t\t? post.frontmatter.tags.map(tag => (\n\t\t\t\t\t\t<li key={tag + `tag`} className='inline'>\n\t\t\t\t\t\t\t<Link to={`/tags/${kebabCase(tag)}/`}>\n\t\t\t\t\t\t\t\t<Tag key={tag} tag={tag} />\n\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))\n\t\t\t\t\t: null}\n\t\t\t</ul>\n\t\t</div>\n\t</div>\n)\n\nexport default ({\n\tdata: {\n\t\tallMarkdownRemark: { edges },\n\t},\n}) => {\n\tconst Posts = edges\n\t\t// .filter(edge => !!edge.node.frontmatter.date) // You can filter your posts based on some criteria\n\t\t.map(edge => <PostLink key={edge.node.id} post={edge.node} />)\n\n\tconsole.log(edges)\n\n\tconst { freq, scale, transform, opacity } = useSpring({\n\t\tfrom: { scale: 10, opacity: 0.3, transform: 'scale(0.9)', freq: '0.0175, 0.0' },\n\t\tto: { scale: 15, opacity: 1, transform: 'scale(1)', freq: '0.0, 0.0' },\n\t\tconfig: { duration: 3000 },\n\t})\n\n\treturn (\n\t\t<Layout includePreFooter>\n\t\t\t<div className='py-48 text-6xl font-hairline text-center text-purple-100 bg-gradient-to-r from-orange-400 via-red-500 to-indigo-500'>\n\t\t\t\t<animated.svg height={0}>\n\t\t\t\t\t<defs>\n\t\t\t\t\t\t<filter id='water'>\n\t\t\t\t\t\t\t<AnimFeTurbulence type='fractalNoise' baseFrequency={freq} numOctaves='1.5' result='TURB' seed='8' />\n\t\t\t\t\t\t\t<AnimFeDisplacementMap xChannelSelector='R' yChannelSelector='G' in='SourceGraphic' in2='TURB' result='DISP' scale={scale} />\n\t\t\t\t\t\t</filter>\n\t\t\t\t\t</defs>\n\t\t\t\t</animated.svg>\n\t\t\t\t<animated.p style={{ filter: 'url(#water)', transform: transform, opacity: opacity }}>\n\t\t\t\t\tWe are hiring!\n\t\t\t\t</animated.p>\n\t\t\t</div>\n\t\t\t<div className='container flex-grow mx-auto mt-8'>\n\t\t\t\t<div className='mx-4'>\n\t\t\t\t\t{Posts}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(filter: {fileAbsolutePath: {regex: \"/.*careers.*/\"}}, sort: { order: DESC, fields: [frontmatter___date] }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 250)\n          frontmatter {\n            slug\n            title\n            location\n            commitment\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\n\nexport default function Tag ({ tag }) {\n\treturn (\n\t\t<span className='inline-block px-3 py-1 mr-2 text-sm font-semibold text-gray-700 bg-gray-200 rounded-full last:mr-0'>#{tag}</span>\n\t)\n}\n"],"sourceRoot":""}